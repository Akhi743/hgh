import re
from datetime import datetime
import pdfplumber
from paddleocr import PaddleOCR

# Initialize OCR
ocr = PaddleOCR(use_angle_cls=True, lang='en')

REQUIRED_FIELDS = [
    "Facility", "Charge Master Limit", "Charge Master Increase",
    "Rate Adjustment Date", "Business", "Service Category",
    "Current Rate", "Adjusted New Rate"
]

def extract_text_from_pdf(pdf_path):
    text = []
    try:
        with pdfplumber.open(pdf_path) as pdf:
            for page in pdf.pages:
                image = page.to_image(resolution=300).original
                result = ocr.ocr(image, cls=True)
                for line in result[0]:
                    text.append(line[1][0])
    except Exception as e:
        print(f"[ERROR] Failed to extract text: {e}")
    return "\n".join(text)

def find_valid_date(text):
    matches = re.findall(r'\b(\d{2}[/-]\d{2}[/-]\d{4})\b', text)
    for match in matches:
        if "rate adjustment date" in text.lower() or "effective date" in text.lower():
            try:
                dt = datetime.strptime(match.replace("-", "/"), "%m/%d/%Y")
                print(f"[INFO] Found date: {dt.strftime('%m/%d/%Y')}")
                if dt > datetime(2024, 7, 1):
                    return dt
            except Exception as e:
                print(f"[WARN] Failed to parse date: {match} ‚Äî {e}")
    return None

def has_required_fields(text):
    print("[INFO] Checking required fields:")
    all_found = True
    for field in REQUIRED_FIELDS:
        found = field.lower() in text.lower()
        print(f"  - {field}: {'‚úÖ' if found else '‚ùå'}")
        if not found:
            all_found = False
    return all_found

def test_single_pdf(pdf_path):
    print(f"[START] Analyzing PDF: {pdf_path}")
    text = extract_text_from_pdf(pdf_path)

    # Step 1: Check Rate Adjustment Date or Effective Date
    date = find_valid_date(text)
    if not date:
        print("[RESULT] ‚ùå Skipped: No valid date or too old\n")
        return

    # Step 2: Check for all required fields
    if not has_required_fields(text):
        print("[RESULT] ‚ùå Skipped: Missing required fields\n")
        return

    print("[RESULT] ‚úÖ Valid contract with all fields and valid date\n")

if __name__ == "__main__":
    # üîÅ Replace this with your test file path
    test_pdf = "path/to/your/testfile.pdf"
    test_single_pdf(test_pdf)
